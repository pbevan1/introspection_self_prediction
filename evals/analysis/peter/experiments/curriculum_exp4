import pandas as pd

from evals.analysis.james.james_analysis import get_single_hue
from evals.analysis.james.plotting.plot_response_property_with_baseline import (
    create_chart,
)
from evals.locations import EXP_DIR


def cross_training():
    """
    --val_tasks='{"survival_instinct": ["matches_survival_instinct"], "myopic_reward": ["matches_myopic_reward"], "animals_long": ["first_character", "second_character", "third_character", "first_and_second_character", "first_word", "second_word", "starts_with_vowel", "third_word"], "mmlu_non_cot": ["is_either_a_or_c", "is_either_b_or_d"], "english_words_long": ["first_character", "second_character", "third_character", "first_and_second_character", "first_word", "second_word", "starts_with_vowel", "third_word"], "stories_sentences": ["first_character", "second_character", "third_character", "first_and_second_character", "first_word", "second_word", "starts_with_vowel", "third_word"]}' \    """
    print("running")
    only_tasks = {
        "survival_instinct",
        "myopic_reward",
        "animals_long",
        "mmlu_non_cot",
        "english_words_long",
        "stories_sentences",
    }
    # only_tasks = {}
    # resp_properties = set()
    resp_properties = [
        "among_options",
        "ethical_stance",
        "first_character",
        "first_word",
        "second_character",
        "second_word",
        "starts_with_vowel",
        "third_character",
        "third_word",
    ]
    exp_folder = EXP_DIR / "curriculum_exp4"
    # “ft:gpt-4o-2024-05-13:dcevals-kokotajlo::A3ZXwt6P”: “GPT40 fted on (GPT4 fted on GPT4)“,
    first_bar = get_single_hue(
        object_model="gpt-4o-mini-2024-07-18",
        meta_model="gpt-4o-mini-2024-07-18",
        exp_folder=exp_folder,
        include_identity=False,
        only_response_properties=resp_properties,
        only_tasks=only_tasks,
        label="1) Self Prediction: GPT-4o-mini",
        exclude_noncompliant=True,
    )
    second_bar = get_single_hue(
        object_model="ft:gpt-4o-mini-2024-07-18:personal::AfV1XBVm",
        meta_model="ft:gpt-4o-2024-08-06:personal::AfVQ5JfD",
        exp_folder=exp_folder,
        include_identity=False,
        only_response_properties=resp_properties,
        only_tasks=only_tasks,
        label="2) Cross Prediction: GPT-4o fted on (fted GPT-4o-mini) predicting (fted GPT-4o-mini) [Curriculum Learning]",
        exclude_noncompliant=True,
    )
    third_bar = get_single_hue(
        object_model="ft:gpt-4o-mini-2024-07-18:personal::AfV1XBVm",
        meta_model="ft:gpt-4o-mini-2024-07-18:personal::AfV1XBVm",
        exp_folder=exp_folder,
        include_identity=False,
        only_tasks=only_tasks,
        only_response_properties=resp_properties,
        label="3) Self Prediction: fted GPT-4o-mini [Curriculum Learning]",
        exclude_noncompliant=True,
        # only_strings=first_bar.strings,
    )
    fourth_bar = get_single_hue(
        object_model="ft:gpt-4o-mini-2024-07-18:personal::AfVvZIoz",
        meta_model="ft:gpt-4o-2024-08-06:personal::AfWML6jg",
        exp_folder=exp_folder,
        include_identity=False,
        only_tasks=only_tasks,
        only_response_properties=resp_properties,
        label="4) Cross Prediction: GPT-4o fted on (fted GPT-4o-mini) predicting (fted GPT-4o-mini) [Shuffled Training Data]",
        exclude_noncompliant=True,
        # only_strings=first_bar.strings,
    )
    fifth_bar = get_single_hue(
        object_model="ft:gpt-4o-mini-2024-07-18:personal::AfVvZIoz",
        meta_model="ft:gpt-4o-mini-2024-07-18:personal::AfVvZIoz",
        exp_folder=exp_folder,
        include_identity=False,
        only_tasks=only_tasks,
        only_response_properties=resp_properties,
        label="5) Self Prediction: fted GPT-4o-mini [Shuffled Training Data]",
        exclude_noncompliant=True,
        # only_strings=first_bar.strings,
    )
    ## Evidence 2, held out prompts
    results = first_bar.results + second_bar.results + third_bar.results + fourth_bar.results + fifth_bar.results
    # dump to df
    df = pd.DataFrame(results)
    df.to_csv("response_property_results.csv", index=False)
    create_chart(
        df=df, title="Investigating curriculum learning for introspection with gpt-4o-mini and gpt-4o", _sorted_properties=resp_properties, fix_ratio=False
    )


cross_training()
